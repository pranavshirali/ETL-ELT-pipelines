[2025-05-23T13:23:20.328+0530] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2025-05-23T13:23:20.337+0530] {taskinstance.py:2612} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: elt_sales_stream_transformation.transform_sales_stream manual__2025-05-23T07:53:16.700502+00:00 [queued]>
[2025-05-23T13:23:20.341+0530] {taskinstance.py:2612} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: elt_sales_stream_transformation.transform_sales_stream manual__2025-05-23T07:53:16.700502+00:00 [queued]>
[2025-05-23T13:23:20.342+0530] {taskinstance.py:2865} INFO - Starting attempt 1 of 1
[2025-05-23T13:23:20.359+0530] {taskinstance.py:2888} INFO - Executing <Task(SQLExecuteQueryOperator): transform_sales_stream> on 2025-05-23 07:53:16.700502+00:00
[2025-05-23T13:23:20.362+0530] {standard_task_runner.py:72} INFO - Started process 28973 to run task
[2025-05-23T13:23:20.373+0530] {standard_task_runner.py:104} INFO - Running: ['airflow', 'tasks', 'run', 'elt_sales_stream_transformation', 'transform_sales_stream', 'manual__2025-05-23T07:53:16.700502+00:00', '--job-id', '173', '--raw', '--subdir', 'DAGS_FOLDER/elt_transformation_dag.py', '--cfg-path', '/tmp/tmpjo0t_1w2']
[2025-05-23T13:23:20.374+0530] {standard_task_runner.py:105} INFO - Job 173: Subtask transform_sales_stream
[2025-05-23T13:23:20.396+0530] {task_command.py:467} INFO - Running <TaskInstance: elt_sales_stream_transformation.transform_sales_stream manual__2025-05-23T07:53:16.700502+00:00 [running]> on host Voldemort.
[2025-05-23T13:23:20.444+0530] {taskinstance.py:3131} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='elt_sales_stream_transformation' AIRFLOW_CTX_TASK_ID='transform_sales_stream' AIRFLOW_CTX_EXECUTION_DATE='2025-05-23T07:53:16.700502+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-05-23T07:53:16.700502+00:00'
[2025-05-23T13:23:20.445+0530] {taskinstance.py:731} INFO - ::endgroup::
[2025-05-23T13:23:20.459+0530] {sql.py:306} INFO - Executing: 
        -- Create Region table
        CREATE OR REPLACE TABLE AIRFLOW_DB.ELT_TRANSFORMED.Region AS
        SELECT
            ROW_NUMBER() OVER (ORDER BY REGION) AS Region_id,
            REGION
        FROM (
            SELECT DISTINCT REGION
            FROM AIRFLOW_DB.PUBLIC."SALES STREAM"
        );

        -- Create Country table
        CREATE OR REPLACE TABLE AIRFLOW_DB.ELT_TRANSFORMED.Country AS
        SELECT
            ROW_NUMBER() OVER (ORDER BY COUNTRY) AS Country_id,
            COUNTRY
        FROM (
            SELECT DISTINCT COUNTRY
            FROM AIRFLOW_DB.PUBLIC."SALES STREAM"
        );

        -- Create Item table
        CREATE OR REPLACE TABLE AIRFLOW_DB.ELT_TRANSFORMED.Item AS
        SELECT
            ROW_NUMBER() OVER (ORDER BY "ITEM TYPE") AS Item_id,
            "ITEM TYPE" AS Item_type
        FROM (
            SELECT DISTINCT "ITEM TYPE"
            FROM AIRFLOW_DB.PUBLIC."SALES STREAM"
        );

        -- Create Order_Priority table
        CREATE OR REPLACE TABLE AIRFLOW_DB.ELT_TRANSFORMED.Order_Priority AS
        SELECT
            ROW_NUMBER() OVER (ORDER BY "ORDER PRIORITY") AS OrderPriority_id,
            "ORDER PRIORITY"
        FROM (
            SELECT DISTINCT "ORDER PRIORITY"
            FROM AIRFLOW_DB.PUBLIC."SALES STREAM"
        );

        -- Create Orders table with JOINs
        CREATE OR REPLACE TABLE AIRFLOW_DB.ELT_TRANSFORMED.Orders AS
        SELECT
            s."SALES CHANNEL",
            s."ORDER PRIORITY",
            s."ORDER DATE",
            s."ORDER ID",
            s."SHIP DATE",
            s."UNITS SOLD",
            s."UNIT PRICE",
            s."UNIT COST",
            s."TOTAL REVENUE",
            s."TOTAL COST",
            s."TOTAL PROFIT",
            r.Region_id,
            c.Country_id,
            i.Item_id,
            op.OrderPriority_id,
            DATEDIFF(
                'day',
                COALESCE(
                TRY_TO_DATE(s."ORDER DATE", 'M/D/YYYY'),
                TRY_TO_DATE(s."ORDER DATE", 'MM/DD/YYYY'),
                TRY_TO_DATE(s."ORDER DATE", 'YYYY-MM-DD')
                ),
                COALESCE(
                TRY_TO_DATE(s."SHIP DATE", 'M/D/YYYY'),
                TRY_TO_DATE(s."SHIP DATE", 'MM/DD/YYYY'),
                TRY_TO_DATE(s."SHIP DATE", 'YYYY-MM-DD')
                )
            ) AS SHIPMENT_LEAD_TIME
        FROM AIRFLOW_DB.PUBLIC."SALES STREAM" s
        JOIN AIRFLOW_DB.ELT_TRANSFORMED.Region r ON r.Region = s.REGION
        JOIN AIRFLOW_DB.ELT_TRANSFORMED.Country c ON c.Country = s.COUNTRY
        JOIN AIRFLOW_DB.ELT_TRANSFORMED.Item i ON i.Item_type = s."ITEM TYPE"
        JOIN AIRFLOW_DB.ELT_TRANSFORMED.Order_Priority op ON op."ORDER PRIORITY" = s."ORDER PRIORITY";

        
[2025-05-23T13:23:20.463+0530] {base.py:84} INFO - Retrieving connection 'snowflake_con'
[2025-05-23T13:23:20.517+0530] {base.py:84} INFO - Retrieving connection 'snowflake_con'
[2025-05-23T13:23:20.517+0530] {connection.py:486} INFO - Snowflake Connector for Python Version: 3.15.0, Python Version: 3.10.12, Platform: Linux-5.15.167.4-microsoft-standard-WSL2-x86_64-with-glibc2.35
[2025-05-23T13:23:20.518+0530] {connection.py:1391} INFO - Connecting to GLOBAL Snowflake domain
[2025-05-23T13:23:21.227+0530] {snowflake.py:521} INFO - Running statement: -- Create Region table
        CREATE OR REPLACE TABLE AIRFLOW_DB.ELT_TRANSFORMED.Region AS
        SELECT
            ROW_NUMBER() OVER (ORDER BY REGION) AS Region_id,
            REGION
        FROM (
            SELECT DISTINCT REGION
            FROM AIRFLOW_DB.PUBLIC."SALES STREAM"
        );, parameters: None
[2025-05-23T13:23:21.228+0530] {sql.py:814} INFO - Running statement: -- Create Region table
        CREATE OR REPLACE TABLE AIRFLOW_DB.ELT_TRANSFORMED.Region AS
        SELECT
            ROW_NUMBER() OVER (ORDER BY REGION) AS Region_id,
            REGION
        FROM (
            SELECT DISTINCT REGION
            FROM AIRFLOW_DB.PUBLIC."SALES STREAM"
        );, parameters: None
[2025-05-23T13:23:22.205+0530] {sql.py:823} INFO - Rows affected: 1
[2025-05-23T13:23:22.206+0530] {snowflake.py:534} INFO - Rows affected: 1
[2025-05-23T13:23:22.207+0530] {snowflake.py:535} INFO - Snowflake query id: 01bc8939-3201-a522-000d-39de000886e6
[2025-05-23T13:23:22.207+0530] {snowflake.py:521} INFO - Running statement: -- Create Country table
        CREATE OR REPLACE TABLE AIRFLOW_DB.ELT_TRANSFORMED.Country AS
        SELECT
            ROW_NUMBER() OVER (ORDER BY COUNTRY) AS Country_id,
            COUNTRY
        FROM (
            SELECT DISTINCT COUNTRY
            FROM AIRFLOW_DB.PUBLIC."SALES STREAM"
        );, parameters: None
[2025-05-23T13:23:22.207+0530] {sql.py:814} INFO - Running statement: -- Create Country table
        CREATE OR REPLACE TABLE AIRFLOW_DB.ELT_TRANSFORMED.Country AS
        SELECT
            ROW_NUMBER() OVER (ORDER BY COUNTRY) AS Country_id,
            COUNTRY
        FROM (
            SELECT DISTINCT COUNTRY
            FROM AIRFLOW_DB.PUBLIC."SALES STREAM"
        );, parameters: None
[2025-05-23T13:23:22.693+0530] {sql.py:823} INFO - Rows affected: 1
[2025-05-23T13:23:22.694+0530] {snowflake.py:534} INFO - Rows affected: 1
[2025-05-23T13:23:22.694+0530] {snowflake.py:535} INFO - Snowflake query id: 01bc8939-3201-a522-000d-39de000886ea
[2025-05-23T13:23:22.694+0530] {snowflake.py:521} INFO - Running statement: -- Create Item table
        CREATE OR REPLACE TABLE AIRFLOW_DB.ELT_TRANSFORMED.Item AS
        SELECT
            ROW_NUMBER() OVER (ORDER BY "ITEM TYPE") AS Item_id,
            "ITEM TYPE" AS Item_type
        FROM (
            SELECT DISTINCT "ITEM TYPE"
            FROM AIRFLOW_DB.PUBLIC."SALES STREAM"
        );, parameters: None
[2025-05-23T13:23:22.694+0530] {sql.py:814} INFO - Running statement: -- Create Item table
        CREATE OR REPLACE TABLE AIRFLOW_DB.ELT_TRANSFORMED.Item AS
        SELECT
            ROW_NUMBER() OVER (ORDER BY "ITEM TYPE") AS Item_id,
            "ITEM TYPE" AS Item_type
        FROM (
            SELECT DISTINCT "ITEM TYPE"
            FROM AIRFLOW_DB.PUBLIC."SALES STREAM"
        );, parameters: None
[2025-05-23T13:23:23.317+0530] {sql.py:823} INFO - Rows affected: 1
[2025-05-23T13:23:23.318+0530] {snowflake.py:534} INFO - Rows affected: 1
[2025-05-23T13:23:23.318+0530] {snowflake.py:535} INFO - Snowflake query id: 01bc8939-3201-a521-000d-39de0008774a
[2025-05-23T13:23:23.318+0530] {snowflake.py:521} INFO - Running statement: -- Create Order_Priority table
        CREATE OR REPLACE TABLE AIRFLOW_DB.ELT_TRANSFORMED.Order_Priority AS
        SELECT
            ROW_NUMBER() OVER (ORDER BY "ORDER PRIORITY") AS OrderPriority_id,
            "ORDER PRIORITY"
        FROM (
            SELECT DISTINCT "ORDER PRIORITY"
            FROM AIRFLOW_DB.PUBLIC."SALES STREAM"
        );, parameters: None
[2025-05-23T13:23:23.318+0530] {sql.py:814} INFO - Running statement: -- Create Order_Priority table
        CREATE OR REPLACE TABLE AIRFLOW_DB.ELT_TRANSFORMED.Order_Priority AS
        SELECT
            ROW_NUMBER() OVER (ORDER BY "ORDER PRIORITY") AS OrderPriority_id,
            "ORDER PRIORITY"
        FROM (
            SELECT DISTINCT "ORDER PRIORITY"
            FROM AIRFLOW_DB.PUBLIC."SALES STREAM"
        );, parameters: None
[2025-05-23T13:23:23.755+0530] {sql.py:823} INFO - Rows affected: 1
[2025-05-23T13:23:23.755+0530] {snowflake.py:534} INFO - Rows affected: 1
[2025-05-23T13:23:23.755+0530] {snowflake.py:535} INFO - Snowflake query id: 01bc8939-3201-a522-000d-39de000886ee
[2025-05-23T13:23:23.755+0530] {snowflake.py:521} INFO - Running statement: -- Create Orders table with JOINs
        CREATE OR REPLACE TABLE AIRFLOW_DB.ELT_TRANSFORMED.Orders AS
        SELECT
            s."SALES CHANNEL",
            s."ORDER PRIORITY",
            s."ORDER DATE",
            s."ORDER ID",
            s."SHIP DATE",
            s."UNITS SOLD",
            s."UNIT PRICE",
            s."UNIT COST",
            s."TOTAL REVENUE",
            s."TOTAL COST",
            s."TOTAL PROFIT",
            r.Region_id,
            c.Country_id,
            i.Item_id,
            op.OrderPriority_id,
            DATEDIFF(
                'day',
                COALESCE(
                TRY_TO_DATE(s."ORDER DATE", 'M/D/YYYY'),
                TRY_TO_DATE(s."ORDER DATE", 'MM/DD/YYYY'),
                TRY_TO_DATE(s."ORDER DATE", 'YYYY-MM-DD')
                ),
                COALESCE(
                TRY_TO_DATE(s."SHIP DATE", 'M/D/YYYY'),
                TRY_TO_DATE(s."SHIP DATE", 'MM/DD/YYYY'),
                TRY_TO_DATE(s."SHIP DATE", 'YYYY-MM-DD')
                )
            ) AS SHIPMENT_LEAD_TIME
        FROM AIRFLOW_DB.PUBLIC."SALES STREAM" s
        JOIN AIRFLOW_DB.ELT_TRANSFORMED.Region r ON r.Region = s.REGION
        JOIN AIRFLOW_DB.ELT_TRANSFORMED.Country c ON c.Country = s.COUNTRY
        JOIN AIRFLOW_DB.ELT_TRANSFORMED.Item i ON i.Item_type = s."ITEM TYPE"
        JOIN AIRFLOW_DB.ELT_TRANSFORMED.Order_Priority op ON op."ORDER PRIORITY" = s."ORDER PRIORITY";, parameters: None
[2025-05-23T13:23:23.755+0530] {sql.py:814} INFO - Running statement: -- Create Orders table with JOINs
        CREATE OR REPLACE TABLE AIRFLOW_DB.ELT_TRANSFORMED.Orders AS
        SELECT
            s."SALES CHANNEL",
            s."ORDER PRIORITY",
            s."ORDER DATE",
            s."ORDER ID",
            s."SHIP DATE",
            s."UNITS SOLD",
            s."UNIT PRICE",
            s."UNIT COST",
            s."TOTAL REVENUE",
            s."TOTAL COST",
            s."TOTAL PROFIT",
            r.Region_id,
            c.Country_id,
            i.Item_id,
            op.OrderPriority_id,
            DATEDIFF(
                'day',
                COALESCE(
                TRY_TO_DATE(s."ORDER DATE", 'M/D/YYYY'),
                TRY_TO_DATE(s."ORDER DATE", 'MM/DD/YYYY'),
                TRY_TO_DATE(s."ORDER DATE", 'YYYY-MM-DD')
                ),
                COALESCE(
                TRY_TO_DATE(s."SHIP DATE", 'M/D/YYYY'),
                TRY_TO_DATE(s."SHIP DATE", 'MM/DD/YYYY'),
                TRY_TO_DATE(s."SHIP DATE", 'YYYY-MM-DD')
                )
            ) AS SHIPMENT_LEAD_TIME
        FROM AIRFLOW_DB.PUBLIC."SALES STREAM" s
        JOIN AIRFLOW_DB.ELT_TRANSFORMED.Region r ON r.Region = s.REGION
        JOIN AIRFLOW_DB.ELT_TRANSFORMED.Country c ON c.Country = s.COUNTRY
        JOIN AIRFLOW_DB.ELT_TRANSFORMED.Item i ON i.Item_type = s."ITEM TYPE"
        JOIN AIRFLOW_DB.ELT_TRANSFORMED.Order_Priority op ON op."ORDER PRIORITY" = s."ORDER PRIORITY";, parameters: None
[2025-05-23T13:23:27.829+0530] {sql.py:823} INFO - Rows affected: 1
[2025-05-23T13:23:27.830+0530] {snowflake.py:534} INFO - Rows affected: 1
[2025-05-23T13:23:27.830+0530] {snowflake.py:535} INFO - Snowflake query id: 01bc8939-3201-a521-000d-39de0008774e
[2025-05-23T13:23:28.063+0530] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2025-05-23T13:23:28.063+0530] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=elt_sales_stream_transformation, task_id=transform_sales_stream, run_id=manual__2025-05-23T07:53:16.700502+00:00, execution_date=20250523T075316, start_date=20250523T075320, end_date=20250523T075328
[2025-05-23T13:23:28.102+0530] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2025-05-23T13:23:28.109+0530] {taskinstance.py:3900} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2025-05-23T13:23:28.110+0530] {local_task_job_runner.py:245} INFO - ::endgroup::
